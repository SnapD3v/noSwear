import telebot
from telebot import types
import database as db

api_token = input('–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω: ')

bot = telebot.TeleBot(api_token)


def build_menu(buttons, n_cols,
               header_buttons=None,
               footer_buttons=None):
    menu = [buttons[i:i + n_cols] for i in range(0, len(buttons), n_cols)]
    if header_buttons:
        menu.insert(0, [header_buttons])
    if footer_buttons:
        menu.append([footer_buttons])
    return menu


available_effects = [
    '–¢–∏—à–∏–Ω–∞'
]


def kb_available_effects():
    kb = [types.KeyboardButton('–¢–∏—à–∏–Ω–∞')]
    kb_markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True).add(*kb)
    return kb_markup


@bot.message_handler(commands=['start'])
def send_welcome(message):
    try:
        user_id = message.from_user.id
        if db.check_user_id_in_db(user_id):
            db.edit_user_data(user_id, 'current_task', {})
        else:
            db.create_user_data(user_id)

        kb = [types.KeyboardButton('–í–∏–¥–µ–æ'),
              types.KeyboardButton('–ê—É–¥–∏–æ')]
        kb_markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True).add(*kb)

        bot.reply_to(message,
                     'üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç ‚ÄúNo Swear‚Äù, –∏ —è –ø–æ–º–æ–≥—É –æ—á–∏—Å—Ç–∏—Ç—å –≤–∞—à–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã. '
                     '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å:',
                     reply_markup=kb_markup)
        bot.register_next_step_handler(message, file_format)
    except Exception as e:
        db.ExceptionHandler(e)
        bot.reply_to(message,
                     '–û–π! –í–æ–∑–Ω–∏–∫–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞... –æ–Ω–∞ —É–∂–µ –±—ã–ª–∞ –≤—ã—Å–ª–∞–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º.')


def file_format(message):
    try:
        user_id = message.from_user.id

        if message.text == '–í–∏–¥–µ–æ' or message.text == '–ê—É–¥–∏–æ':
            db.edit_user_current_task(user_id, 'format', message.text)

            kb = [types.KeyboardButton('–ù–µ—Ü–µ–Ω–∑—É—Ä–Ω—É—é –ª–µ–∫—Å–∏–∫—É (—Ä—É—Å—Å–∫–∏–π)'),
                  types.KeyboardButton('–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–π –≤—ã–±–æ—Ä —Å–ª–æ–≤')]
            kb_markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True).add(*kb)

            bot.reply_to(message,
                         '–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–∏–º, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å.'
                         '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:'
                         '1. –ó–∞–º–µ–Ω–∏—Ç—å –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—É—é –ª–µ–∫—Å–∏–∫—É (—Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ)'
                         '2. –°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–π –≤—ã–±–æ—Ä —Å–ª–æ–≤',
                         reply_markup=kb_markup)
            bot.register_next_step_handler(message, words_to_change)
        else:
            bot.reply_to(message,
                         '–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —Ñ–æ—Ä–º–∞—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ: "–í–∏–¥–µ–æ" –∏–ª–∏ "–ê—É–¥–∏–æ"')
            bot.register_next_step_handler(message, file_format)
    except Exception as e:
        db.ExceptionHandler(e)
        bot.reply_to(message,
                     '–û–π! –í–æ–∑–Ω–∏–∫–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞... –æ–Ω–∞ —É–∂–µ –±—ã–ª–∞ –≤—ã—Å–ª–∞–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º.')



def words_to_change(message):
    try:
        user_id = message.from_user.id

        if message.text == '–ù–µ—Ü–µ–Ω–∑—É—Ä–Ω—É—é –ª–µ–∫—Å–∏–∫—É (—Ä—É—Å—Å–∫–∏–π)':
            db.edit_user_current_task(user_id, 'ban_list', 'default')

            kb_markup = kb_available_effects()

            bot.reply_to(message,
                         '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ, –Ω–∞ —á—Ç–æ –∑–∞–º–µ–Ω–∏—Ç—å —ç—Ç–∏ —Å–ª–æ–≤–∞:',
                         reply_markup=kb_markup)
            bot.register_next_step_handler(message, change_effect)

        elif message.text == '–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–π –≤—ã–±–æ—Ä —Å–ª–æ–≤':
            db.edit_user_current_task(user_id, 'ban_list', 'own')

            bot.reply_to(message,
                         '–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –∑–∞–º–µ–Ω–∏—Ç—å, —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é.')
            bot.register_next_step_handler(message, set_own_word_list)

        else:
            bot.reply_to(message,
                         '–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–ª–∏ –≤–∞—à –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ: '
                         '"–ù–µ—Ü–µ–Ω–∑—É—Ä–Ω—É—é –ª–µ–∫—Å–∏–∫—É (—Ä—É—Å—Å–∫–∏–π)" –∏–ª–∏ "–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–π –≤—ã–±–æ—Ä —Å–ª–æ–≤"')
            bot.register_next_step_handler(message, file_format)
    except Exception as e:
        db.ExceptionHandler(e)
        bot.reply_to(message,
                     '–û–π! –í–æ–∑–Ω–∏–∫–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞... –æ–Ω–∞ —É–∂–µ –±—ã–ª–∞ –≤—ã—Å–ª–∞–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º.')


def set_own_word_list(message):
    try:
        user_id = message.from_user.id
        word_list = message.text.split(',')
        db.edit_user_current_task(user_id, 'word_list', word_list)

        kb = [types.KeyboardButton('–î–∞'),
              types.KeyboardButton('–ù–µ—Ç')]
        kb_markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True).add(*kb)

        bot.reply_to(message,
                     f'–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∑–∞–º–µ–Ω–µ–Ω—ã: \n{" | ".join(word_list)} \n–í–µ—Ä–Ω–æ?',
                     reply_markup=kb_markup)
        bot.register_next_step_handler(message, confirm_set_own_word_list)
    except Exception as e:
        db.ExceptionHandler(e)
        bot.reply_to(message,
                     '–û–π! –í–æ–∑–Ω–∏–∫–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞... –æ–Ω–∞ —É–∂–µ –±—ã–ª–∞ –≤—ã—Å–ª–∞–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º.')


def confirm_set_own_word_list(message):
    try:
        user_id = message.from_user.id

        if message.text == '–î–∞':
            kb_markup = kb_available_effects()

            bot.reply_to(message,
                         '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ, –Ω–∞ —á—Ç–æ –∑–∞–º–µ–Ω–∏—Ç—å —ç—Ç–∏ —Å–ª–æ–≤–∞:',
                         reply_markup=kb_markup)
            bot.register_next_step_handler(message, change_effect)

        elif message.text == '–ù–µ—Ç':
            db.edit_user_current_task(user_id, 'word_list', '')

            bot.reply_to(message,
                         '–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –∑–∞–º–µ–Ω–∏—Ç—å, —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é.')
            bot.register_next_step_handler(message, set_own_word_list)
    except Exception as e:
        db.ExceptionHandler(e)
        bot.reply_to(message,
                     '–û–π! –í–æ–∑–Ω–∏–∫–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞... –æ–Ω–∞ —É–∂–µ –±—ã–ª–∞ –≤—ã—Å–ª–∞–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º.')


def change_effect(message):
    try:
        user_id = message.from_user.id
        if message.text in available_effects:
            db.edit_user_current_task(user_id, 'effect', message.text)

            bot.reply_to(message,
                         '–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∞—à [–≤–∏–¥–µ–æ/–∞—É–¥–∏–æ] —Ñ–∞–π–ª –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏. '
                         '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –æ—Ç –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–æ–π –ª–µ–∫—Å–∏–∫–∏. '
                         '–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–ª–µ–¥—É—é—â–∏–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º: \n'
                         '–§–æ—Ä–º–∞—Ç: **MP4**, **MP3**, **WAV**\n'
                         '–ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —è –Ω–∞—á–Ω—É –æ–±—Ä–∞–±–æ—Ç–∫—É!')
            bot.register_next_step_handler(message, user_upload_file)
        else:
            bot.reply_to(message,
                         '–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–ª–∏ –≤–∞—à –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –±–æ—Ç–µ.')
            bot.register_next_step_handler(message, change_effect)

    except Exception as e:
        db.ExceptionHandler(e)
        bot.reply_to(message,
                     '–û–π! –í–æ–∑–Ω–∏–∫–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞... –æ–Ω–∞ —É–∂–µ –±—ã–ª–∞ –≤—ã—Å–ª–∞–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º.')


def user_upload_file(message):
    pass


print('Bot is running.')
if __name__ == '__main__':
    bot.polling(none_stop=True, interval=0)